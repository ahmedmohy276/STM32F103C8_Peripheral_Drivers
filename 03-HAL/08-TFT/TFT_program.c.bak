/*****************************************/
/* Author  :  Ahmed Mohy                 */
/* Date    :  5 January 2022             */
/* Version :  V01                        */
/*****************************************/

#include "STD_TYPES.h"
#include "BIT_MATH.h"

#include "RCC_interface.h"
#include "DIO_interface.h"
#include "SYSTICK_interface.h"
#include "SPI_interface.h"

#include "TFT_interface.h"
#include "TFT_private.h"
#include "TFT_config.h"


void HTFT_voidInit(void)
{
	/* Reset pulse */
	MGPIO_voidSetPin(TFT_RESET_PIN) ;
	MSTK_voidSetBusyWait(100) ;
	
	MGPIO_voidClearPin(TFT_RESET_PIN) ;
	MSTK_voidSetBusyWait(1) ;
	
	MGPIO_voidSetPin(TFT_RESET_PIN) ;
	MSTK_voidSetBusyWait(100) ;
	
	MGPIO_voidClearPin(TFT_RESET_PIN) ;
	MSTK_voidSetBusyWait(100) ;
	
	MGPIO_voidSetPin(TFT_RESET_PIN) ;
	MSTK_voidSetBusyWait(120000) ;
	
	/* Sleep out command */
	voidWriteCommand(0X11);
	/* Wait 150 ms */
	MSTK_voidSetBusyWait(150000) ;
	/* Color mode command */
	voidWriteCommand(0X3A);
	voidWriteData(0X05) ;
	/* Display on command */
	voidWriteCommand(0X29) ;
	
}


void HTFT_voidDisplayImage(const u8 *Copy_Image) 
{
	
}



static void voidWriteCommand(u8 Copy_u8Command)
{
	u8 Local_u8Temp =0 ;
	/* set A0 pin to low */
	MGPIO_voidClearPin(TFT_A0_PIN) ;
	/* Send command over SPI */
	MSPI1_voidSendReceiveSynch(Copy_u8Command , &Local_u8Temp) ;
}


static void voidWriteData(u8 Copy_u8Data)
{
	u8 Local_u8Temp =0 ;
	/* set A0 pin to high */
	MGPIO_voidSetPin(TFT_A0_PIN) ;
	/* Send command over SPI */
	MSPI1_voidSendReceiveSynch(Copy_u8Data , &Local_u8Temp) ;
}
